# Generated by Django 3.2.9 on 2021-11-24 23:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Addservicetype',
            fields=[
                ('addservicetypeid', models.AutoField(db_column='AddServiceTypeId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('cost', models.PositiveIntegerField(blank=True, db_column='Cost', null=True)),
            ],
            options={
                'db_table': 'addservicetype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employeeid', models.AutoField(db_column='EmployeeId', primary_key=True, serialize=False)),
                ('login', models.CharField(blank=True, db_column='Login', max_length=30, null=True)),
                ('passwordhash', models.CharField(blank=True, db_column='PasswordHash', max_length=64, null=True)),
                ('session', models.CharField(blank=True, db_column='Session', max_length=32, null=True)),
                ('lastname', models.CharField(blank=True, db_column='Lastname', max_length=30, null=True)),
                ('firstname', models.CharField(blank=True, db_column='Firstname', max_length=30, null=True)),
                ('patronymic', models.CharField(blank=True, db_column='Patronymic', max_length=30, null=True)),
            ],
            options={
                'db_table': 'employee',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Foodtype',
            fields=[
                ('foodtypeid', models.AutoField(db_column='FoodTypeId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('cost', models.PositiveIntegerField(blank=True, db_column='Cost', null=True)),
            ],
            options={
                'db_table': 'foodtype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orderinfo',
            fields=[
                ('orderid', models.AutoField(db_column='OrderId', primary_key=True, serialize=False)),
                ('checkindate', models.DateField(blank=True, db_column='CheckInDate', null=True)),
                ('checkoutdate', models.DateField(blank=True, db_column='CheckOutDate', null=True)),
                ('numberofguests', models.IntegerField(blank=True, db_column='NumberOfGuests', null=True)),
                ('cost', models.IntegerField(blank=True, db_column='Cost', null=True)),
            ],
            options={
                'db_table': 'orderinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Paymenttype',
            fields=[
                ('paymenttypeid', models.AutoField(db_column='PaymentTypeId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
            ],
            options={
                'db_table': 'paymenttype',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Roomclass',
            fields=[
                ('roomclassid', models.AutoField(db_column='RoomClassId', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=30, null=True)),
                ('cost', models.PositiveIntegerField(blank=True, db_column='Cost', null=True)),
            ],
            options={
                'db_table': 'roomclass',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('visitorid', models.AutoField(db_column='VisitorId', primary_key=True, serialize=False)),
                ('login', models.CharField(blank=True, db_column='Login', max_length=30, null=True)),
                ('passwordhash', models.CharField(blank=True, db_column='PasswordHash', max_length=64, null=True)),
                ('session', models.CharField(blank=True, db_column='Session', max_length=32, null=True)),
                ('lastname', models.CharField(blank=True, db_column='Lastname', max_length=30, null=True)),
                ('firstname', models.CharField(blank=True, db_column='Firstname', max_length=30, null=True)),
                ('patronymic', models.CharField(blank=True, db_column='Patronymic', max_length=30, null=True)),
                ('phonenumber', models.CharField(blank=True, db_column='PhoneNumber', max_length=15, null=True)),
            ],
            options={
                'db_table': 'visitor',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('roomid', models.AutoField(db_column='RoomId', primary_key=True, serialize=False)),
                ('hotelnumber', models.PositiveIntegerField(blank=True, db_column='HotelNumber', null=True)),
                ('roomnumber', models.PositiveIntegerField(blank=True, db_column='RoomNumber', null=True)),
                ('roomclassid', models.ForeignKey(blank=True, db_column='RoomClassId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.roomclass')),
            ],
            options={
                'db_table': 'room',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orderstatus',
            fields=[
                ('orderstatusid', models.AutoField(db_column='OrderStatusId', primary_key=True, serialize=False)),
                ('orderactive', models.IntegerField(blank=True, db_column='OrderActive', null=True)),
                ('orderpayed', models.IntegerField(blank=True, db_column='OrderPayed', null=True)),
                ('orderid', models.ForeignKey(blank=True, db_column='OrderId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.orderinfo')),
                ('paymenttypeid', models.ForeignKey(blank=True, db_column='PaymentTypeId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.paymenttype')),
            ],
            options={
                'db_table': 'orderstatus',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='orderinfo',
            name='roomid',
            field=models.ForeignKey(blank=True, db_column='RoomId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.room'),
        ),
        migrations.AddField(
            model_name='orderinfo',
            name='visitorid',
            field=models.ForeignKey(blank=True, db_column='VisitorId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.visitor'),
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('foodid', models.AutoField(db_column='FoodId', primary_key=True, serialize=False)),
                ('foodtypeid', models.ForeignKey(blank=True, db_column='FoodTypeId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.foodtype')),
                ('orderid', models.ForeignKey(blank=True, db_column='OrderId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.orderinfo')),
            ],
            options={
                'db_table': 'food',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Addservices',
            fields=[
                ('addservicesid', models.AutoField(db_column='AddServicesId', primary_key=True, serialize=False)),
                ('addservicetypeid', models.ForeignKey(blank=True, db_column='AddServiceTypeId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.addservicetype')),
                ('orderid', models.ForeignKey(blank=True, db_column='OrderId', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='main.orderinfo')),
            ],
            options={
                'db_table': 'addservices',
                'managed': True,
            },
        ),
    ]
